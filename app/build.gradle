apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.airtel.xstreamfiber"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 8
        versionName "1.03.05"
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        resValue "string", "basicAuthUsername", USERNAME
//        resValue "string", "basicAuthPass", PASSWORD
    }
    buildTypes {
        release {
            buildConfigField "String", "baseUrl", BASEURL
            buildConfigField "String", "basicAuthUsername", USERNAME
            buildConfigField "String", "basicAuthPass", PASSWORD

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            // signingConfig playStoreConfig //Add your own signing config
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        debug {
            buildConfigField "String", "baseUrl", BASEURL
            buildConfigField "String", "basicAuthUsername", USERNAME
            buildConfigField "String", "basicAuthPass", PASSWORD

            /*minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            debuggable true*/


            /*minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true*/
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def project = "XstreamFiber"
                def SEP = "_"
                def version = variant.versionName
                def date = new Date();
//                def formattedDate = date.format('ddMMyy_HHmm')
                def formattedDate = date.format('ddMMyy')

                def newApkName = project + SEP + /*version + SEP + */formattedDate + ".apk"

                outputFileName = new File(newApkName)
            }
        }

    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'org.jsoup:jsoup:1.11.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation 'com.squareup.okhttp:okhttp:2.5.0'
    implementation("com.squareup.okhttp3:logging-interceptor:4.2.1")
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.balysv:material-ripple:1.0.2'


    //reactive
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    api "com.trello.rxlifecycle2:rxlifecycle:$rootProject.rxlifecycleVersion"
    api "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.rxlifecycleVersion"
    api "com.jakewharton.rxbinding2:rxbinding:$rootProject.rxbindingVersion"
    api "com.tbruyelle.rxpermissions2:rxpermissions:$rootProject.rxpermissionsVersion@aar"
    api "com.cantrowitz:rxbroadcast:$rootProject.rxbroadcastVersion"


    //retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    api "com.squareup.moshi:moshi:$rootProject.moshiVersion"
    api "com.squareup.retrofit2:converter-moshi:$rootProject.retrofitVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpLoggingVersion"
    api "com.squareup.okhttp3:okhttp:$rootProject.okHttpLoggingVersion"

    implementation 'androidx.multidex:multidex:2.0.1'

    //dagger&butterknife
    api "com.google.dagger:dagger:$rootProject.daggerVersion"
    api "com.jakewharton:butterknife:$rootProject.butterknifeVersion"

    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"


    implementation 'com.google.android.libraries.places:places:2.2.0'

    //implementation 'com.cardiomood.android:android-widgets:0.1.1'

    //link:- https://github.com/SanojPunchihewa/InAppUpdater
//    implementation 'com.github.SanojPunchihewa:InAppUpdater:1.0.5-alpha.1'

    //link:- https://github.com/dnKaratzas/android-inapp-update
//    implementation 'eu.dkaratzas:android-inapp-update:1.0.5'


    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'com.journeyapps:zxing-android-embedded:3.4.0'
    implementation 'com.google.zxing:core:3.2.1'

    //Glide
//    implementation 'com.github.bumptech.glide:glide:4.11.0'
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

}
